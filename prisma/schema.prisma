// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// the user model
model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    name String?
    email String? @unique
    emailVerified DateTime?
    image String?
    hashedPassword String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    favoriteIds String[] @db.ObjectId

    accounts Account[]
    listings Listing[]
    reservations Reservation[]
}

// the Account model
model Account {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId String @db.ObjectId
    type String
    provider String
    providerAccountId String 
    refresh_token String? @db.String
    access_token String? @db.String
    expires_at Int?
    token_type String?
    scope String?
    id_token String? @db.String
    session_state String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    // unique combinations of these two field
    @@unique([provider, providerAccountId])
}

// the listing model
model Listing {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    title String 
    description String
    imageSrc String 
    createdAt DateTime @default(now())
    category String
    roomCount Int
    bathroomCount Int
    guestCount Int 
    locationValue String 
    userId String @db.ObjectId
    price Int

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    reservations Reservation[]
}

// the reservation model
model Reservation {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId String @db.ObjectId
    listingId String @db.ObjectId
    startDate DateTime
    endDate DateTime
    totalPrice Int
    createdAt DateTime @default(now())
    

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

// run "npx prisma db push" to push the schema to the mongodb database using the prisma configuration

// install the necessary packages
// npm install next-auth @prisma/client @next-auth/prisma-adapter